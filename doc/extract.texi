@cindex Rules
@cindex NAT
@cindex Cat

@process{Extract} process extracts archives into the local server cache 
by applying the extraction rules.
@acronym{NAT} servers also brings back available files wanted by other severs from its clients.

12 extraction rules are implemented: 
@itemize @bullet
@item @acronym{SCP}, @acronym{ISO}, @acronym{CAT}: multi OS containers
@item @acronym{TGZ}, @acronym{TBZ}, @acronym{AFIO}: @acronym{GNU/Linux} combined containers 
@item @acronym{TAR}, @acronym{CPIO}, @acronym{GZ}, @acronym{BZ}: @acronym{GNU/Linux} simple containers
@item @acronym{ZIP}, @acronym{RAR}: @acronym{Windows} combined containers
@end itemize

@table @code
@item cpio
No compression ; GNU multi-volume archives are not supported.
@item tar
Multi-volume support is a GNU extension and the archives created in this mode should be read only using GNU tar.
@example
$ tar -cM -L1000 -f multi1 -f multi2 -f multi3  data 
@end example
@item afio
Compressed archives that are fault tolerant: thanks to the individual files compression, if there is a single byte error you will only loose one or two files.
@end table
@note{} The native multi-volumes archives are only handle for @acronym{RAR}.
Other containers must be cut using @code{split} and re-assembled with @code{cat}.


Process conceptual model:

@image{mediatex-figures/extract,,,,}

@itemize @bullet
@item Events in
@table @code

@item @eventServerExtractReg
from @procClientMisc{}: ask to start extraction by setting a value into share memory and sending a signal.

@item @eventServerExtract
from @procServerCgiSrv{} or @procServerHave{}: internally ask to start extraction.

@end table
@item Processing

@itemize @bullet
@item When not call internally, first list all archives that will need to be extracted: all demands and unsafe archives that are not already extracted.
@item Next, when performing an archive extraction:
@itemize @bullet
@item allocate space into the cache
@item extract archive into the temporary extraction directory
@item move the archive into the cache
@item adjust the archive time-to-live so as recursive extraction using this archive will not remove it by allocating new places.
@item send a notification to @actorUser{} who was looking for the newly extracted archive.
@end itemize
@end itemize

@item Events out
@table @code

@item @eventServerCacheAlloc{} 
to @procServerCache{}: allocate place into the cache.

@item @eventServerDeliver
to @procServerDeliver{}: deliver mails related to an extracted archive.

@item @eventClientMiscGet
to @procClientMisc{}: retrieve a remote collection's file via @acronym{SSH}.

@item @eventClientSuppMount
@itemx @eventClientSuppUMount
to @procClientSupp{}: manage mounting @iso{} devices.

@end table
@item Input data
@itemize @bullet
@item @dataConf
@item @dataServers
@item @dataExtract
@end itemize
@end itemize

Code:
@table @file
@item src/server/extract.c
@end table
