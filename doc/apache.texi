@cindex apache

@actor{User} use @sc{Apache} to browse the index and get archives.
@sc{Apache} is configured to query the @activityServer{} via the
@procScriptsCgi{} @acronym{cgi} script.
The @sc{Apache}'s configuration files given bellow are generated by 
@procScriptsInitRemovePurge{} and @procScriptsNewFreeClean{} scripts.

Here are the @sc{Apache}'s modules @sc{Mediatex} uses:
@table @code
@item auth_digest
to cypher password (if using @acronym{HTTP})
@item autoindex 
in order to display the cache
@item env 
@itemx include 
we use @acronym{SSI} (server side includes) in order to reduce the size of the @acronym{HTML} catalogue.
@item rewrite 
in order to force using @acronym{HTTPS} protocol by default
@item userdir
so as to access collection with a similar @acronym{URL} on every servers, by using the tilde ``~''
@item ssl
to enable the @acronym{HTTPS} protocol
@end table

Process conceptual model:

@image{mediatex-figures/apache,,,,}

@itemize @bullet
@item Events in
@table @code
@item @eventToolsApacheReload
@itemx @eventToolsApacheRestart
from @procScriptsInitRemovePurge
@item @eventToolsApacheHttpGet 
from @actorUser{}: resulting from a click on an archive's @acronym{URL}.
@item @eventToolsApacheHttpPost 
from @actorUser{}: submiting the requested form to provide @acronym{eMAIL} 
address, in order to be call back when archive will become available.
@item @eventToolsApacheStartDownload
from @actorUser{}: final request for a file availble into the cache.
@end table

@item Events out
@table @code
@item @eventScriptsCgiGetQuery
@item @eventScriptsCgiPostQuery
to @procScriptsCgi{}: forward queries to the @acronym{CGI} script.
@item @eventActorUserHtmlForm 
(if archive is not available) ...
@itemx @eventActorUserHtmlRedirect 
(if archive is available) @*
to @actorUser{}: send back either a form asking form an @acronym{eMAIL} address, or a redirection link to the archive into one server's cache.
@end table

@item Data in
@table @file
@item /etc/apache2/conf.d/mediatex.conf
@end table
@example
Alias /mediatex/ /var/cache/mediatex/
<Directory /var/cache/mediatex/>
   Order allow,deny
   Deny from All
   AllowOverride None
</Directory>
@end example
@table @file
@item /etc/apache2/conf.d/mediatex-mdtx.conf
@end table
@example
<IfModule mod_userdir.c>
   <Directory /var/cache/mediatex/mdtx/public_html/>
      # enable cgi for ~mdtx
      Options +ExecCGI +FollowSymLinks
      AddHandler cgi-script .cgi
      Order deny,allow
      Deny from All
      Allow from localhost
   </Directory>
   <Directory /var/cache/mediatex/mdtx/home/mdtx-*/public_html/>
      Order deny,allow
      Allow from All
      AllowOverride All
   </Directory>
</IfModule>
@end example
@table @file
@item ~mdtx-COLL/public_html/.htaccess
@end table
@example
# force https
RewriteEngine On 
RewriteCond %@{SERVER_PORT@} !^443$
RewriteRule .* https://%@{HTTP_HOST@}%@{REQUEST_URI@} [QSA,R=301,L]

# Server side includes
Options +Includes
DirectoryIndex index.shtml

# login/password
AuthType Digest
AuthName "mdtx-COLL"
AuthDigestProvider file
AuthUserFile  /etc/mediatex/mdtx-COLL/apache2/htpasswd
AuthGroupFile /etc/mediatex/mdtx-COLL/apache2/htgroup
@end example
@table @file
@item ~mdtx-COLL/public_html/index/.htaccess
@end table
@example
# login/password
Require group index
@end example
@table @file
@item ~mdtx-COLL/public_html/score/.htaccess
@end table
@example
# login/password
Require group score
@end example
@table @file
@item ~mdtx-COLL/public_html/cgi/.htaccess
@end table
@example
# enable cgi
Options +ExecCGI +FollowSymLinks
AddHandler cgi-script .cgi

<Files get.cgi>
       # set log severity
       SetEnv MDTX_LOG_FACILITY local2 
       SetEnv MDTX_LOG_SEVERITY err 

       # login/password
       Require group history
</Files>

<Files viewvc.cgi>
       # login/password
       Require group index
</Files>
@end example
@table @file
@item ~mdtx-COLL/public_html/cache/.htaccess
@end table
@example
# fancy index for cache
Options +Indexes
SetEnv HOME /mediatex/mdtx/home/mdtx-COLL/public_html/
HeaderName /mediatex/mdtx/home/mdtx-COLL/public_html/\
                                               cacheHeader.shtml
ReadmeName /mediatex/mdtx/home/mdtx-COLL/public_html/footer.html

# login/password
Require group cache
@end example

@actorUser{} logins and passwords are manage by the 2 files bellow.
A first entry is generated by the @procScriptsNewFreeClean{} script
using the server label as login (@code{mdtx} by default) and
the password you provide.
@table @file
@item /etc/mediatex/mdtx-COLL/apache2/htgroup
@example
index: mdtx, @var{username1}
cache: mdtx
score: mdtx, @var{username1}
history: mdtx
@end example

@item /etc/mediatex/mdtx-COLL/apache2/htpasswd
@example
mdtx:mdtx-COLL:75a895c47530b5177d8ba1616f49d648
@var{username1}:mdtx-COLL:855531b7d2e25b190c6d1da662da5f90
@end example
@end table

You may want to automate the encryption in order to add new users
(the @code{htdigest} tool does not accept pipe redirection). 
Simplest way is:
@example
printf "@var{username1}:mdtx-COLL:yourPassword" | md5sum
855531b7d2e25b190c6d1da662da5f90  -
@end example

@end itemize

Code:
@table @file
@item /usr/share/mediatex/scripts/libs/htdocs.sh
@item /usr/share/mediatex/scripts/libs/cvs.sh
@end table
