@cindex Apache

@actorUser{} use @sc{Apache} to browse the @acronym{HTML} catalogue and access archives. (For tips, you should maybe read this section first : @pxref{HTTP}).
@sc{Apache} is configured to query the @activityServer{} via the @procScriptsCgi{} @acronym{CGI} script.

The followings @sc{Apache}'s modules are enabled by @sc{Mediatex}:
@table @code
@item auth_digest
to cypher password (even if using @acronym{HTTP}).
@item authz_groupfile
to filter access to the catalogue, cache, extraction rules and @acronym{GIT} history.
@item autoindex 
to display the cache's content.
@item cgi
to call get.cgi and cgit.cgi scripts.
@item env 
to use absolute paths into the @acronym{HTML} page's headers and to retrieve the configuration of cgit.
@item include 
@acronym{SSI} (server side includes) are used to reduce the size of the @acronym{HTML} catalogue.
@item rewrite 
to force using @acronym{HTTPS} protocol (if wanted).
@item userdir
to access collection with a similar @acronym{URL} on every servers, by using the tilde (``~'').
@item setenvif
to provide switch to disable authentification, as cache's .htaccess file must be generated by make.
@item ssl
to enable the @acronym{HTTPS} protocol.
@end table
They are left when mediatex software is removed, as they could still be in used for another purpose.

Process conceptual model:

@image{mediatex-figures/apache,,,,}

@itemize @bullet
@item Events in
@table @code

@item @eventToolsApacheRestart
from @procScriptsInitRemovePurge{}: re-configure @acronym{APACHE}.

@item @eventToolsApacheReload
from @procScriptsNewFreeClean{}: make @acronym{APACHE} aware of new collection's system groups it belongs to.

@item @eventToolsApacheHttpGet{} 
from @actorUserO{}: resulting from a click on an archive's @acronym{URL}.

@item @eventToolsApacheHttpPost{} 
from @actorUserO{}: requesting the submitted @acronym{HTML} form to provide its @acronym{eMAIL} address, in order to be called back when archive will become available.

@item @eventToolsApacheStartDownload
from @actorUserO{}: final request for a file available into the cache.

@end table
@item Processing

Manage @actorUserO{}'s queries generated by its internet browser and replies from @procScriptsCgi{}.

@item Events out
@table @code

@item @eventScriptsCgiGetQuery
@item @eventScriptsCgiPostQuery
to @procScriptsCgi{}: forward the @actorUserO{}'s @acronym{HTTP} query.

@item @eventActorUserHtmlForm{} 
(if archive is not available) ...
@item @eventActorUserHtmlRedirect{} 
(if archive is available) @*
to @actorUserO{}: send back either a form asking for an @acronym{eMAIL} address, or a redirection link to the archive into one server's cache.

The @sc{Apache}'s configuration files given bellow are generated by 
@procScriptsInitRemovePurge{} and @procScriptsNewFreeClean{} scripts.
@end table
@item Data in
@table @file
@item /etc/apache2/conf-available/mediatex.conf
@end table
@example
Alias /mediatex /var/cache/mediatex
<Directory /var/cache/mediatex>
	Require all denied
	AllowOverride None
</Directory>
@end example

@table @file
@item /etc/apache2/conf-available/mediatex-mdtx.conf
@end table
@example
<IfModule mod_userdir.c>
	<Directory /var/cache/mediatex/mdtx/public_html>
		# enable cgi for ~mdtx
		Options +ExecCGI +FollowSymLinks
		AddHandler cgi-script .cgi
		SetEnv CGIT_CONFIG /var/cache/mediatex/mdtx/cgitrc
		Require local
		Require all denied
	</Directory>
	<Directory /var/cache/mediatex/mdtx/home/mdtx-*/public_html>
		Require all granted
		AllowOverride All
	</Directory>
</IfModule>
@end example

This file (and only this one) is generated by @eventClientMiscMake{}.
@table @file
@item ~mdtx-COLL/public_html/cache/.htaccess
@end table
@example
# fancy index for cache
Options +Indexes
SetEnv HOME /~mdtx-hello
HeaderName /mediatex/mdtx/home/mdtx-hello/public_html/cacheHeader.shtml
ReadmeName /mediatex/mdtx/home/mdtx-hello/public_html/footer.html

# login/password
Require env NO_AUTH
Require group cache
@end example

The following files are shared into each collection by servers using @acronym{GIT} (they are symbolic links). For instance, the first lines of the above file let the @actorPublisherO{} modify the security behaviours for all servers. 
@table @file
@item ~mdtx-COLL/public_html/.htaccess
@end table
@example
# uncomment to force https (no more http available)
#SSLOptions +StrictRequire
#SSLRequireSSL

# uncomment to disable authentification
#SetEnvIf Request_Protocol "^H" NO_AUTH

# server side includes
Options +Includes
DirectoryIndex index.shtml

# login/password
AuthType Digest
AuthName "mdtx-hello"
AuthDigestProvider file
AuthUserFile  /etc/mediatex/mdtx-hello/apache2/htpasswd
AuthGroupFile /etc/mediatex/mdtx-hello/apache2/htgroup
@end example

@table @file
@item ~mdtx-COLL/public_html/index/.htaccess
@end table
@example
# login/password
Require env NO_AUTH
Require group index
@end example

@table @file
@item ~mdtx-COLL/public_html/score/.htaccess
@end table
@example
# login/password
Require env NO_AUTH
Require group score
@end example

@table @file
@item ~mdtx-COLL/public_html/cgi/.htaccess
@end table
@example
# enable cgi
Options +ExecCGI +FollowSymLinks
AddHandler cgi-script .cgi

<Files get.cgi>
       # set log severity
       SetEnv MDTX_LOG_FACILITY local2
       SetEnv MDTX_LOG_SEVERITY_MAIN info

       # login/password
       Require env NO_AUTH
       Require group index
</Files>

<Files cgit.cgi>
       # cgit configuration
       SetEnv CGIT_CONFIG ../../cgitrc

       # login/password
       Require env NO_AUTH
       Require group history
</Files>

<Files put.*>
       # login/password
       Require group upload
</Files>
@end example

@actorUser{} logins and passwords are manage by the 2 files bellow.
A first entry is generated by the @procScriptsNewFreeClean{} script
using the server label as login (@code{mdtx} by default) and
the password you provide.
@table @file
@item /etc/mediatex/mdtx-COLL/apache2/htgroup
@end table
@example
index: mdtx, @var{username1}
cache: mdtx
score: mdtx, @var{username1}
history: mdtx
@end example
@itemize @bullet
@item ``index'' section is the descriptive catalog. 
@item ``cache'' section gives access to the archive files.
@item ``score'' section details the extraction meta-data. It provides scores for archives, servers and the whole collection. 
@item ``version'' section shows the history of meta-data.
@item optional ``upload'' section provides a form to add archives.
@end itemize

@table @file
@item /etc/mediatex/mdtx-COLL/apache2/htpasswd
@end table
@example
mdtx:mdtx-COLL:75a895c47530b5177d8ba1616f49d648
@var{username1}:mdtx-COLL:855531b7d2e25b190c6d1da662da5f90
@end example

@end itemize
You may want to automate the encryption in order to add new users
(the @code{htdigest} tool does not accept pipe redirection). 
Simplest way is:
@example
printf "@var{username1}:mdtx-COLL:yourPassword" | md5sum
855531b7d2e25b190c6d1da662da5f90  -
@end example

Code:
@table @file
@item scripts/libs/htdocs.sh
@end table
