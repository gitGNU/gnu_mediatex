@cindex index catalog file

The @dataCatalogO{} files handle the descriptive meta-data of a collection.

Using the ``@eventClientUpload{}'' query, @actorPublisher{} should provide related descriptive meta-data for the new archive, using the same grammar language.

The format of this file is oriented to describe a simple movie database.
It does not conform to any specific descriptive meta-data schema,
like the Dublin Core (@url{http://dublincore.org/}).
However, the translation from and to all meta-data formats remains possible, by adding characteristics to the objects.

Relational schema:

@image{mediatex-figures/catalog.txt,,,,}

@itemize @bullet
@item Entities
@itemize @bullet
@item 
The @sc{Archive} entity lists all archive's data files.
@item 
The @sc{Document} entity groups archives (data, parts, versions time-stamps @dots{}) related to an archived document.
@item 
The @sc{Category} entity groups documents by themes (thesaurus).
@item 
The @sc{Human} entity lists humans related to a document.
@item 
The @sc{Role} entity lists all titles a human contributing to a document may have (ex: producer, actor for a movie).
@item
The @sc{*_Carac} entities are unidirectional in order to consume less memory.
@end itemize

@item Relations
@itemize @bullet
@item 
The @sc{asso_role} relationship matches a human, a role and a document.
@item 
The @sc{contains} relationship matches ether humans or documents to categories, or records to documents.
@end itemize
@end itemize

Exemple:
@example
# Categories:

Top Category "media"
  "topo" = "Welcome !"
Top Category "image": "media"
Top Category "drawing": "image"
Top Category "animal"
Category "hand": "drawing", "animal"

# Humans:

Human	 "Me" "": "drawing"
  "another thing?" = "no"

# Archives:

Archive	 022a34b2f9b893fba5774237e1aa80ea:24075
  "format" = "PNG"
Archive	 b281449c229bcc4a3556cdcc0d3ebcec:815
  "format" = "XPM"
  "licence" = "GPLv3"

# Documents:

Document "panthere": "animal", "drawing", "hand"
  With "designer" = "Me" ""
  "info" = "[P]erenial [A]rchive [N]etwork [There]"
  022a34b2f9b893fba5774237e1aa80ea:24075
  b281449c229bcc4a3556cdcc0d3ebcec:815
@end example

Grammar:
@example
file: stanzas 
    | //empy file 

stanzas: stanzas stanza
       | stanza

stanza: defCategory
      | defHuman
      | defDocument
      | defArchive

caracs: caracs carac
      | carac

carac: string = string

defCategory: newCategory : categories caracs
           | newCategory : categories
           | newCategory caracs
           | newCategory

newCategory: TOP CATEGORY string
           | CATEGORY string

categories: categories , category
          | category

category: string

defHuman: newHuman : categories caracs
        | newHuman : categories
        | newHuman caracs
        | newHuman

newHuman: HUMAN human

human: string string

defArchive: newArchive archCaracs
         | newArchive

newArchive: ARCHIVE archive

archive: hash : number

defDocument: newDocument docCategories docWiths docCaracs docArchives 

newDocument: DOCUMENT document

document: string

docCategories: : categories
             | 

docCaracs: caracs
         | 

docWiths: roles
        | 

roles: roles role
     | role

role: WITH string = human

docArchives: archives
           | 

archives: archives archive
        | archive

hash:   [[:xdigit:]]@{32@}     
string: \"(\\\"|[^\n\"])@{0,511@}\" 
number: [[:digit:]]+
@end example

Code:
@table @file
@item src/memory/catalogTree.h
@itemx src/memory/catalogTree.c
@itemx src/parser/catalogFile.l
@itemx src/parser/catalogFile.y
@end table
