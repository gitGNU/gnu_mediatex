@cindex api
@cindex oais

@mediatexO focus on providing an @sc{api} to ask for, and retrieve 
archives from where they are stored.

@menu
* Commands::            Client queries.
* Options::	        Options.
* Communication model:: Main specification.
* Accessing an archive:: HTML framework.
@end menu

@node Commands
@section Commands
@cindex Commands

@mediatexO @activityClient{}'s queries:

@itemize @bullet

@item Admin queries:
@table @code

@item @eventClientMiscInit
@itemx @eventClientMiscRemove
@itemx @eventClientMiscPurge
Initialise, remove and purge @mediatexO software.

@item @eventClientMiscAddUser
@itemx @eventClientMiscDelUser
Manage @actorPublisherO users.

@item @eventClientConfAddColl
@itemx @eventClientConfDelColl
Create/subscribe or destroy/unsubscribe a collection. 

@end table
@item Data management:
@table @code

@item @eventClientSuppAdd
Add a new external support: a device or file not always accessible.

@item @eventClientSuppFileAdd
Add a new external support's file: a file always accessible locally.

@item @eventClientSuppDel
Remove a support (external support or support's file).

@item @eventClientSuppList
List supports.

@item @eventClientSuppNote
Associate a short text (10 character's) with a support, which will be display on the list.

@item @eventClientSuppCheck
Provide an external support (that is accessible now).

@item @eventClientConfShareSupport
@itemx @eventClientConfWithdrawSupp
Manage sharing support with collections.

@item @eventClientUpload
Upload an incoming archive into the cache.
Appending one or two '+' will run ``uprade'' or ``upgrade+make'' queries too.

@end table
@item Meta-data management:
@table @code

@item @eventClientConfList
List collections.

@item @eventActorPublisherMotd
Display actions @actorPublisherO have to perform.

@item @eventClientServAddKey
@itemx @eventClientServDelKey
Manage remote servers subscription.

@item @eventClientServUpgrade
Synchronise local server.
Appending one '+' will run ``make'' queries too.

@item @eventClientMiscMake
@itemx @eventClientMiscClean
Manage the local @acronym{HTML} catalogue.

@item @eventClientMiscSu
Change to @mediatex or collection system user.

@item @eventClientMiscAudit
Extract all archives from a collection.

@end table
@item Queries to daemon:
@table @code

@item @eventClientSave
Ask @activityServer to dump its state into disk.

@item @eventClientExtract
Ask @activityServerO to perform extractions.

@item @eventClientNotify
Ask @activityServerO to communicate its state to other servers.

@item @eventClientDeliver
Ask @activityServerO to deliver mails related to extracted archives (no more needed).

@end table
@item Internal/debug queries:
@table @code

@item @eventClientServUpdate
@item @eventClientServCommit
Manage @acronym{CVS} synchronisation (already managed by ``upgrade'' query)

@item @eventClientMiscAdmMake
Build the local @acronym{HTML} catalogue without @acronym{CVS} synchronisation.

@item @eventClientMiscBind
@itemx @eventClientMiscUnBind
Manage collection repository binding on the chrooted jail for @acronym{SSH} remote access (already manage @activityServerO{}).

@item @eventClientSuppMount
@itemx @eventClientSuppUMount
Manage mounting @iso devices.

@item @eventClientMiscGet
Retrieve a remote collection's file via @acronym{SSH}.

@end table
@end itemize

@node Options
@section Options
@cindex Options

Theses options apply to the 3 binaries provided by @mediatexO.

@table @option
@item -h
@itemx --help
Display the help message.

@item -v, --version
Display the mediatex software version.

@item -f @var{facility}
@itemx --facility @var{facility}
Set facility to use for logging. See syslog(3) : mainly @code{file} to log to the standard output or @code{local2} to log to @acronym{SYSLOG}.

@item -l @var{path}
@itemx --log-file @var{path}	
Log into a file. Needs the @code{file} facility (default).

@item -s severity[:module(,module)*]
@item --severity severity[:module(,module)*]
Set severity to log, by modules.
Choose severity amongs @code{err}, @code{warning}, @code{notice}, @code{info} and @code{debug}.
You may provide modules amongs @code{alloc}, @code{script}, @code{misc}, @code{memory}, @code{parser}, @code{common} and @code{main}.
If you provide no module, all except the @code{alloc} module will be selected.

@item -m @var{number}
@itemx --memory-limit @var{number}
Set a nice limit for malloc in Mo. When @activityServerO overcome this limit, it will try to release objects not used.  

@item -S
@item --script-out	
Enable the standard output for scripts (that is hidden by default).

@item -n
@itemx --dry-run
Do a dry run: do not write anything.

@item -L, 
@itemx --debug-lexer
Enable debug information from lexers.

@item -c @var{mdtxLabel}
@item --conf-label @var{mdtxLabel}
Over hide 'mdtx.conf' configuration file and use @var{mdtxLabel} system user instead of @code{mdtx}. This permit to run independent @mediatexO systems on the same machine. This is mainly used for tests.

@item -a
@itemx --alone
Do not make @acronym{CVS} queries. This may be useful if you temporary loose your network connection, or if you want to be temporally isolated for tests.
@note{}: This option is only available on @activityClient as @activityServer and @procScriptsCgi never perform @acronym{CVS} queries.

@end table

@node Communication model
@section Communication model
@cindex Communication model

The following specifications use the @sc{Merise} conception method.
Here are the typographical conventions used:

@itemize @bullet
@item 
Caps are use for @actor{Actor}s and @activity{activitie}s,
@item 
Bold is use for @process{processing}s,
@item 
``<>'' are use for object's @state{states},
@item 
Verbatim is used for @code{@event{event}}s, which may be:
@itemize @bullet
@item @code{@event{# command}} : @actor{Admin} or @actor{Date} command line
@item @code{@event{$ command}} : @actor{Publisher} command line
@item @code{@event{(message)}} : final message like mail and motd
@item @code{@event{<message>}} : synchronous message using a socket
@item @code{@event{[register]}} : asynchronous message using signal
@item @code{@event{function()}} : internal call
@end itemize
@end itemize

Communication model:

@image{mediatex-figures/main,,,,}

@itemize @bullet
@item 4 actors interact with the @mediatexO activity
@itemize @minus
@item @actorUser
@item @actorPublisher
@item @actorAdmin
@item @actorDate
@end itemize

@item Events in
@table @code

@item @eventToolsApacheHttpGet 
@itemx @eventToolsApacheHttpPost 
@itemx @eventToolsApacheStartDownload
from @actorUserO

@item @eventClientServAddKey
@itemx @eventClientServDelKey
@itemx @eventClientServUpgrade
@itemx @eventClientSuppAdd
@itemx @eventClientSuppFileAdd
@itemx @eventClientSuppDel
@itemx @eventClientSuppNote
@itemx @eventClientSuppCheck
@itemx @eventClientSuppList
@itemx @eventClientConfList
@itemx @eventClientConfShareSupport
@itemx @eventClientConfWithdrawSupp
@itemx @eventClientUpload
@itemx @eventClientMiscMake
@itemx @eventClientMiscAudit
from @actorPublisherO

@item @eventScriptsInitdStart 
@itemx @eventScriptsInitdStop
@itemx @eventScriptsInitdStatus
@itemx @eventScriptsInitdReload
@itemx @eventClientMiscInit
@itemx @eventClientMiscRemove
@itemx @eventClientMiscPurge
@itemx @eventClientMiscAddUser
@itemx @eventClientMiscDelUser
@itemx @eventClientConfAddColl
@itemx @eventClientConfDelColl
from @actorAdminO

@item @eventToolsCronDate
from @actorDateO

@end table

Commands are detailed into the @mediatex specifications.

@item Events out
@table @code

@item @eventActorUserHtmlForm 
@itemx @eventActorUserHtmlRedirect 
@itemx @eventActorUserMail 
to @actorUserO

@item @eventActorPublisherMotd
@itemx @eventActorPublisherMail 
to @actorPublisherO

@item @eventActorAdminMail
to @actorAdminO

@end table
@item Data in/out
@itemize @bullet
@item @dataConf
@item @dataCatalog
@item @dataExtract
@end itemize

Data files involved are detailed into the next section.
@end itemize

@node Accessing an archive
@section Accessing an archive
@cindex Accessing an archive

This diagram describes what happen when a @actorUser access an archive:
@itemize @bullet
@item available on some @activityServer{}'s caches
@item not available on any @activityServer{}'s cache.
@end itemize

@image{mediatex-figures/accessing,,,,}

