@cindex api
@cindex oais

@mediatexO{} focus on providing an @sc{api} to ask for, and retrieve 
archives from where they are stored.

@menu
* Commands::             Client queries.
* Options::	         Command line options.
* Communication model::  Main specification.
* Accessing an archive:: HTTP interface.
* System users::         System users and groups.
* Stack model::          Meta-data consistency.
@end menu

@node Commands
@section Commands
@cindex Commands

@mediatexO{} @activityClient{}'s queries:

@itemize @bullet

@item Admin queries:
@table @code

@item @eventClientMiscInit
@itemx @eventClientMiscRemove
@itemx @eventClientMiscPurge
Initialise, remove and purge @mediatexO{} software.

@item @eventClientMiscAddUser
@itemx @eventClientMiscDelUser
Manage @actorPublisherO users.

@item @eventClientConfAddColl
@itemx @eventClientConfDelColl
Create/subscribe or destroy/unsubscribe a collection. 

@end table
@item Data management:
@table @code

@item @eventClientSuppAdd
Add a new external support: a device or file not always accessible.

@item @eventClientSuppFileAdd
Add a new external support's file: a file always accessible locally.

@item @eventClientSuppDel
Remove a support (external support or support's file).

@item @eventClientSuppList
List supports.

@item @eventClientSuppNote
Associate a short text (10 character's) with a support, which will be display on the list.

@item @eventClientSuppCheck
Provide an external support (that is accessible now).

@item @eventClientConfShareSupport
@itemx @eventClientConfWithdrawSupp
Manage sharing support with collections.

@item @eventClientUpload
Upload an incoming archive into the cache.
Appending one or two '+' will run ``uprade'' or ``upgrade+make'' queries too.

@end table
@item Meta-data management:
@table @code

@item @eventClientConfList
List collections.

@item @eventActorPublisherMotd
Display actions @actorPublisherO have to perform.

@item @eventClientServAddKey
@itemx @eventClientServDelKey
Manage remote servers subscription.

@item @eventClientServUpgrade
Synchronise local server.
Appending one '+' will run ``make'' queries too.

@item @eventClientMiscMake
@itemx @eventClientMiscClean
Manage the local @acronym{HTML} catalogue.

@item @eventClientMiscSu
Change to @mediatex{} or collection system user.

@item @eventClientMiscAudit
Extract all archives from a collection.

@end table
@item Queries to daemon:
@table @code

@item @eventClientSave
Ask @activityServer to dump its state into disk.

@item @eventClientExtract
Ask @activityServerO to perform extractions.

@item @eventClientNotify
Ask @activityServerO to communicate its state to other servers.

@item @eventClientDeliver
Ask @activityServerO to deliver mails related to extracted archives (no more needed).

@end table
@item Internal/debug queries:
@table @code

@item @eventClientServUpdate
@item @eventClientServCommit
Manage @acronym{CVS} synchronisation (already managed by ``upgrade'' query)

@item @eventClientMiscAdmMake
Build the local @acronym{HTML} catalogue without @acronym{CVS} synchronisation.

@item @eventClientMiscBind
@itemx @eventClientMiscUnBind
Manage collection repository binding on the chrooted jail for @acronym{SSH} remote access (already manage @activityServerO{}).

@item @eventClientSuppMount
@itemx @eventClientSuppUMount
Manage mounting @iso devices.

@item @eventClientMiscGet
Retrieve a remote collection's file via @acronym{SSH}.

@end table
@end itemize

@node Options
@section Command line Options
@cindex Options

Theses options apply to the 3 binaries provided by @mediatexO.

@table @option
@item -h
@itemx --help
Display the help message.

@item -v, --version
Display the mediatex software version.

@item -f @var{facility}
@itemx --facility @var{facility}
Set facility to use for logging. See syslog(3) : mainly @code{file} to log to the standard output or @code{local2} to log to @acronym{SYSLOG}.

@item -l @var{path}
@itemx --log-file @var{path}	
Log into a file. Needs the @code{file} facility (default).

@item -s severity[:module(,module)*]
@item --severity severity[:module(,module)*]
Set severity to log, by modules.
Choose severity amongs @code{err}, @code{warning}, @code{notice}, @code{info} and @code{debug}.
You may provide modules amongs @code{alloc}, @code{script}, @code{misc}, @code{memory}, @code{parser}, @code{common} and @code{main}.
If you provide no module, all except the @code{alloc} module will be selected.

@item -m @var{number}
@itemx --memory-limit @var{number}
Set a nice limit for malloc in Mo. When @activityServerO overcome this limit, it will try to release objects not used.  

@item -S
@item --script-out	
Enable the standard output for scripts (that is hidden by default).

@item -n
@itemx --dry-run
Do a dry run: do not write anything.

@item -L, 
@itemx --debug-lexer
Enable debug information from lexers.

@item -c @var{mdtxLabel}
@item --conf-label @var{mdtxLabel}
Over hide 'mdtx.conf' configuration file and use @var{mdtxLabel} system user instead of @code{mdtx}. This permit to run independent @mediatexO{} systems on the same machine. This is mainly used for tests.

@item -a
@itemx --alone
Do not make @acronym{CVS} queries. This may be useful if you temporary loose your network connection, or if you want to be temporally isolated for tests.
@note{} This option is only available on @activityClient as @activityServer and @procScriptsCgi never perform @acronym{CVS} queries.

@end table

@node Communication model
@section Communication model
@cindex Communication model

The following specifications use the @sc{Merise} conception method.
Here are the typographical conventions used:

@itemize @bullet
@item 
Caps are use for @actor{Actor}s and @activity{activitie}s,
@item 
Bold is use for @process{processing}s,
@item 
``<>'' are use for object's @state{states},
@item 
Verbatim is used for @code{@event{event}}s, which may be:
@itemize @bullet
@item @code{@event{# command}} : @actor{Admin} or @actor{Date} command line
@item @code{@event{$ command}} : @actor{Publisher} command line
@item @code{@event{(message)}} : final message like mail and motd
@item @code{@event{<message>}} : synchronous message using a socket
@item @code{@event{[register]}} : asynchronous message using signal
@item @code{@event{function()}} : internal call
@end itemize
@end itemize

Communication model:

@image{mediatex-figures/main,,,,}

@itemize @bullet
@item 4 actors interact with the @mediatexO{} activity
@itemize @minus
@item @actorUser
@item @actorPublisher
@item @actorAdmin
@item @actorDate
@end itemize

@item Events in
@table @code

@item @eventToolsApacheHttpGet 
@itemx @eventToolsApacheHttpPost 
@itemx @eventToolsApacheStartDownload
from @actorUserO

@item @eventClientServAddKey
@itemx @eventClientServDelKey
@itemx @eventClientServUpgrade
@itemx @eventClientSuppAdd
@itemx @eventClientSuppFileAdd
@itemx @eventClientSuppDel
@itemx @eventClientSuppNote
@itemx @eventClientSuppCheck
@itemx @eventClientSuppList
@itemx @eventClientConfList
@itemx @eventClientConfShareSupport
@itemx @eventClientConfWithdrawSupp
@itemx @eventClientUpload
@itemx @eventClientMiscMake
@itemx @eventClientMiscAudit
from @actorPublisherO

@item @eventScriptsInitdStart 
@itemx @eventScriptsInitdStop
@itemx @eventScriptsInitdStatus
@itemx @eventScriptsInitdReload
@itemx @eventClientMiscInit
@itemx @eventClientMiscRemove
@itemx @eventClientMiscPurge
@itemx @eventClientMiscAddUser
@itemx @eventClientMiscDelUser
@itemx @eventClientConfAddColl
@itemx @eventClientConfDelColl
from @actorAdminO

@item @eventToolsCronDate
from @actorDateO

@end table

Commands are detailed into the @mediatex{} specifications.

@item Events out
@table @code

@item @eventActorUserHtmlForm 
@itemx @eventActorUserHtmlRedirect 
@itemx @eventActorUserMail 
to @actorUserO

@item @eventActorPublisherMotd
@itemx @eventActorPublisherMail 
to @actorPublisherO

@item @eventActorAdminMail
to @actorAdminO

@end table
@item Data in/out
@itemize @bullet
@item @dataConf
@item @dataCatalog
@item @dataExtract
@end itemize

Data files involved are detailed into the next section.
@end itemize

@node Accessing an archive
@section Accessing an archive
@cindex Accessing an archive

This diagram describes what happen when a @actorUser access an archive:
@itemize @bullet
@item available on some @activityServer{}'s caches
@item not available on any @activityServer{}'s cache.
@end itemize

@image{mediatex-figures/accessing,,,,}


@node System users
@section System users and groups

@todo: @mediatexO{} should better use @code{setfacl}.

Systems users:
@table @code
@item root
@actorAdmin{}, @actorDate
@item www-data
@actorUser
@item mdtx
@activityServer{}, @activityClient (default)
@item mdtx-@var{col}
@activityClient (collection context)
@item @var{username}
@actorPublisher{}s
@end table

Systems groups:
@table @code
@item www-data
@acronym{HTML} content
@item mdtx
@mediatexO{} internal data
@item mdtx_md
@acronym{CVS} internal data
@item mdtx-@var{col}
Collection's data
@end table

System user and their group members:
@table @code
@item www-data
@code{www-data}, @code{mdtx}, @code{mdtx_md}, @code{mdtx-@var{coll}}
@item mdtx
@code{mdtx}, @code{mdtx_md}, @code{mdtx-@var{coll}}
@item @var{username}
@code{mdtx}, @code{mdtx_md}, @code{mdtx-@var{coll}}
@item mdtx-@var{col}
@code{mdtx_md}, @code{mdtx-@var{coll}}
@end table

@node Stack model
@section Meta-data consistency

Update and commit operation are done implicitly when loading and serialising files.
This may be view like a stack model ensuring consistency on meta-data files (@pxref{Relational schema}).

The so-called meta-data files are mentioned bellow using the followings numbers:
@enumerate 1
@item @dataConf
@item @dataSupp
@item @dataChecksum
@item @dataCatalog
@item @dataExtract
@item @dataServers
@end enumerate

All calls to @activityClientO{} follow the same operations:
@multitable @columnfractions .1 .9
@headitem Stage @tab Description
@item A1 @tab Scripting, which do not need to load the metadata
@item B1 @tab Parse local meta-data (1, 2)
@item C1 @tab @acronym{CVS} update collection (remote) meta-data
@item D1 @tab Parse collection meta-data files (3, 4, 5, 6)
@item E1 @tab Generic upgrade works: @*
      read keys so as to upgrade @acronym{SSH} and @acronym{CVS} settings @*
      and re-compute the local image's score
@item E2 @tab Working on meta-data
@item D2 @tab Serialize meta-data files (3, 4, 5, 6)
@item C2 @tab @acronym{CVS} commit collection meta-data 
@item B2 @tab Serialize local meta-data (1, 2) @*
 and @acronym{CVS} commit local meta-data
@item A2 @tab Send @code{HUP} message to @activityServer{}
@end multitable

@note
@itemize
@item Stage E1 (Generic upgrade works) 
is only processed when (6) is loaded.
This stage insure connection consistency between remote servers :
@example
MASTER         commun           SLAVES
-----------------------------------------
mdtx.conf <--> servers.txt <--> mdtx.conf
                  |
.ssh/     <-------+-----------> .ssh/
CVS/Root  <-------+-----------> CVS/Root
@end example
Morevoer, as external supports's file are checked during this process,
(2) may be serialize too (update last seen/check dates).

@item On stage D2 (Serialise meta-data files), 
the default behaviour is to not serialise (4) and (5)
unless they provide a new @file{NN.txt} post-fixed file.
This intents to speed-up some queries ending (as @code{make}).
In order to force serialising theses files you have to use the @code{upgrade} query.
@end itemize


Bellow details how meta-data files are affected by @activityClientO{}'s queries.

@itemize
@item @actorAdmin queries:
@multitable @columnfractions .50 .03     .05      .03     .07     .03     .03     .07     .03     .05      .03
@headitem Query                  @tab A1 @tab B1  @tab C1 @tab D1 @tab E1 @tab E2 @tab D2 @tab C2 @tab B2  @tab A2
@item @eventClientMiscInit       @tab y  @tab     @tab    @tab    @tab    @tab    @tab    @tab    @tab 1,2 @tab y
@item @eventClientMiscRemove     @tab y  @tab     @tab    @tab    @tab    @tab    @tab    @tab    @tab     @tab
@item @eventClientMiscPurge      @tab y  @tab     @tab    @tab    @tab    @tab    @tab    @tab    @tab     @tab
@item @eventClientMiscAddUser    @tab y  @tab     @tab    @tab    @tab    @tab    @tab    @tab    @tab     @tab
@item @eventClientMiscDelUser    @tab y  @tab     @tab    @tab    @tab    @tab    @tab    @tab    @tab     @tab
@item @eventClientConfAddColl    @tab y  @tab 1,2 @tab y  @tab 6  @tab y  @tab y  @tab 6  @tab y  @tab 1,2 @tab y
@item @eventClientConfDelColl    @tab y  @tab 1   @tab    @tab    @tab    @tab y  @tab    @tab    @tab 1   @tab y
@end multitable

@item @activityClientO{} to himself queries (or debugging queries):
@multitable @columnfractions .50 .03     .05      .03     .07        .03     .03     .07     .03     .05     .03
@headitem Query                  @tab A1 @tab B1  @tab C1 @tab D1    @tab E1 @tab E2 @tab D2 @tab C2 @tab B2 @tab A1
@item @eventClientServUpdate     @tab    @tab 1   @tab y  @tab       @tab    @tab    @tab    @tab    @tab    @tab
@item @eventClientServCommit     @tab    @tab 1   @tab y  @tab       @tab    @tab    @tab    @tab    @tab    @tab
@item @eventClientMiscAdmMake    @tab    @tab 1,2 @tab    @tab 4,5,6 @tab y  @tab y  @tab    @tab    @tab    @tab
@item @eventClientMiscBind       @tab y  @tab     @tab    @tab       @tab    @tab    @tab    @tab    @tab    @tab
@item @eventClientMiscUnBind     @tab y  @tab     @tab    @tab       @tab    @tab    @tab    @tab    @tab    @tab
@item @eventClientSuppMount      @tab y  @tab     @tab    @tab       @tab    @tab    @tab    @tab    @tab    @tab
@item @eventClientSuppUMount     @tab y  @tab     @tab    @tab       @tab    @tab    @tab    @tab    @tab    @tab
@item @eventClientMiscGet        @tab    @tab 1   @tab    @tab 6     @tab y  @tab y  @tab    @tab    @tab    @tab
@end multitable

@item Queries to operate on @activityServerO{}:
@multitable @columnfractions .50 .03 .05 .03 .07 .03 .03 .07 .03 .05 .03
@headitem Client query     @tab A1 @tab B1 @tab C1 @tab D1 @tab E1 @tab E2 @tab D2 @tab C2 @tab B2 @tab A2 
@item @eventClientSave     @tab    @tab    @tab    @tab    @tab    @tab y  @tab    @tab    @tab    @tab   
@item @eventClientExtract  @tab    @tab    @tab    @tab    @tab    @tab y  @tab    @tab    @tab    @tab   
@item @eventClientNotify   @tab    @tab    @tab    @tab    @tab    @tab y  @tab    @tab    @tab    @tab   
@item @eventClientDeliver  @tab    @tab    @tab    @tab    @tab    @tab y  @tab    @tab    @tab    @tab   
@end multitable

@item @actorPublisherO{} data management's queries:
@multitable @columnfractions  .50  .03     .05       .03     .07     .03     .03     .07     .03     .05       .03 
@headitem Client query             @tab A1 @tab B1   @tab C1 @tab D1 @tab E1 @tab E2 @tab D2 @tab C2 @tab B2  @tab A2
@item @eventClientSuppAdd          @tab    @tab 1,2  @tab    @tab    @tab    @tab y  @tab    @tab    @tab 2   @tab
@item @eventClientSuppFileAdd      @tab    @tab 1,2  @tab    @tab    @tab    @tab y  @tab    @tab    @tab 2   @tab
@item @eventClientSuppDel          @tab    @tab 1,2  @tab y  @tab 6  @tab y  @tab y  @tab 6  @tab y  @tab 1,2 @tab y
@item @eventClientSuppList         @tab    @tab 1,2  @tab    @tab    @tab    @tab y  @tab    @tab    @tab     @tab
@item @eventClientSuppNote         @tab    @tab 1,2  @tab    @tab    @tab y  @tab y  @tab    @tab    @tab 2   @tab
@item @eventClientSuppCheck        @tab    @tab 1,2  @tab y  @tab 5  @tab    @tab y  @tab    @tab    @tab 2   @tab
@item @eventClientConfShareSupport @tab    @tab 1,2  @tab y  @tab 6  @tab y  @tab y  @tab 6  @tab y  @tab 1,2 @tab y
@item @eventClientConfWithdrawSupp @tab    @tab 1,2  @tab y  @tab 6  @tab y  @tab y  @tab 6  @tab y  @tab 1,2 @tab y
@item @eventClientUpload           @tab    @tab 1    @tab y  @tab 5  @tab    @tab y  @tab 5  @tab y  @tab     @tab y
@end multitable

@item @actorPublisherO{} meta-data management's queries:
@multitable @columnfractions .50 .03     .05      .03     .07        .03     .03     .07        .03     .05      .03
@headitem Client query           @tab A1 @tab B1  @tab C1 @tab D1    @tab E1 @tab E2 @tab D2    @tab C2 @tab B2  @tab A2
@item @eventClientConfList       @tab    @tab 1   @tab    @tab       @tab    @tab y  @tab       @tab    @tab     @tab
@item @eventClientMotd           @tab    @tab 1,2 @tab y  @tab 3,5,6 @tab y  @tab y  @tab 6     @tab y  @tab 2   @tab y
@item @eventClientServAddKey     @tab    @tab 1   @tab y  @tab 6     @tab y  @tab y  @tab 6     @tab y  @tab 2   @tab y
@item @eventClientServDelKey     @tab    @tab 1   @tab y  @tab 6     @tab y  @tab y  @tab 6     @tab y  @tab 2   @tab y
@item @eventClientServUpgrade    @tab    @tab 1   @tab y  @tab 4,5,6 @tab y  @tab    @tab 4,5,6 @tab y  @tab 1,2 @tab y
@item @eventClientMiscMake       @tab    @tab 1   @tab y  @tab 4,5,6 @tab y  @tab y  @tab 4,5,6 @tab y  @tab 1,2 @tab y
@item @eventClientMiscClean      @tab y  @tab     @tab    @tab       @tab    @tab    @tab       @tab    @tab     @tab
@item @eventClientMiscSu         @tab    @tab 1   @tab    @tab       @tab    @tab y  @tab       @tab    @tab     @tab
@item @eventClientMiscAudit      @tab    @tab     @tab y  @tab 5     @tab    @tab    @tab       @tab    @tab     @tab
@end multitable
@end itemize
