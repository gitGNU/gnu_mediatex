@cindex Rules file

The @dataExtractO{} files handle the extraction rules for a collection.

Using the ``@eventClientUpload{}'' query, @actorPublisher{} should provide extraction rules to the new archive to upload, using the same grammar language.

Relational schema:

@image{mediatex-figures/extract.txt,,,,}

@itemize @bullet
@item Proper entities
@itemize @bullet
@item 
The @sc{Container} entity lists (using an @acronym{AVL} tree) all the container files from where archives are extracted. A Container is identified by its type (@sc{iso},@sc{tar}...) and the first archive needed for extraction (ex: @file{archive-part1.rar}), also called its first parent.
@item
@note{} A dedicated @sc{Container} instance is used internally by @mediatex{} to manage the incoming (or recently uploaded) archives.
@end itemize

@item Linked entities
@itemize @bullet
@item 
The @sc{Archive} entity lists the archive's data files
@end itemize

@item Relations
@itemize @bullet
@item 
The @sc{fromAsso} relationship enumerate (using an @acronym{AVL} tree) the content of a container. For instance, all files provided by a tarball archive: @code{tar -tf archive.tar}.
@note{} for the incoming @sc{Container} instance, the @sc{fromAsso} relationship gives the date the archive was uploaded.

@item
The @sc{parents} relationhip gives all the parts a container is using to perform extraction. (@file{archive-part1.rar}, @dots{}, @file{archive-part@var{N}.rar}).

@item 
The @sc{toContainer} relationship gives the container object an Archive may provides.

@note{} we cannot have several containers for an archive: in the case of a compressed tarball for instance, we have to choose between the two possibilities (@sc{gz} or @sc{tgz}).
@end itemize
@end itemize

Exemple:
@example
(INC
=>
0a7ecd447ef2acb3b5c6e4c550e6636f:374784	1994-01-01,00:00:00
de5008799752552b7963a2670dc5eb18:391168	2010-01-01,01:00:00
)

(IMG
=>
3a04277dd1f43740a5fe17fd0ae9a5aa:24457  here/logo.gz
)

(ISO
de5008799752552b7963a2670dc5eb18:391168
=>
1a167d608e76a6a4a8b16d168580873c:20480 logoP1.cat
)

(ISO
0a7ecd447ef2acb3b5c6e4c550e6636f:374784
=>
c0c055a0829982bd646e2fafff01aaa6:4066  logoP2.cat
)

(CAT
1a167d608e76a6a4a8b16d168580873c:20480,
c0c055a0829982bd646e2fafff01aaa6:4066
=>
0387eee9820fa224525ff8b2e0dfa9be:24546  logo.tgz
)

(TGZ
0387eee9820fa224525ff8b2e0dfa9be:24546
=>
022a34b2f9b893fba5774237e1aa80ea:24075  logo/logo.png,
b281449c229bcc4a3556cdcc0d3ebcec:815    logo/logo.xpm
)
@end example

@note
@itemize @bullet
@item The @code{INC} container is used to remind the date new incoming where uploaded in order to let a delay, @code{uploadTTL} @dataServersO{} for @actorPublisherO before the uploaded file's score impact the whole collection score.
@item The @code{IMG} container is used to remind an extraction path to used when a support need to be copied into the cache. This feature is optionnal ; else the @file{supports/} dirname concatened with the support's name/basename will be used.
@end itemize

Grammar:
@example
file: stanzas
    | //empty file

stanzas: stanzas stanza
       | stanza

stanza: ( container => childs )

container: orphaneContainer
         | stdContainer
         | stdContainer parents

orphaneContainer: type 

stdContainer: type archive

parents: parents parent
       | parent

childs: childs child
      | child

parent: archive 

child: archive string

archive: hash : size

hash: [[:xdigit:]]@{32@}
string: [^[:blank:]\)\n\r]@{1,511@}
type: INC | IMG | ISO | CAT | TGZ | TBZ | TAR | CPIO
    | GZIP | BZIP | ZIP | RAR
size: [[:digit:]]+
@end example

Code:
@table @file
@item src/memory/extractTree.h
@itemx src/memory/extractTree.c
@itemx src/parser/extractFile.l
@itemx src/parser/extractFile.y
@end table
