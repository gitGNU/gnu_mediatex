@cindex Scripts

The @activity{Scripts} activity gather system level operations @mediatexO{} is using. This activity provides basic fonctions on @acronym{BASH} files that are not describe in this documentation.
This activity is divided into 11 process:
@menu
* init.d::               @process{init.d}
* cgiClient::            @process{cgiClient}
* cronHourly-cronDaily:: @process{cronHourly-cronDaily}
* init-remove-purge::    @process{init-remove-purge}
* addUser-delUser::      @process{addUser-delUser}
* new-free-clean::       @process{new-free-clean}
* upgrade-commit-pull-push:: @process{upgrade-commit-pull-push}
* bind-unbind::          @process{bind-unbind}
* mount-umount::         @process{mount-umount}
* deliver::              @process{deliver}
* audit::                @process{audit}
@end menu

@c Flood diagram:

@image{mediatex-figures/scripts,,,,}

@itemize @bullet

@item Events in
@table @code

@item @eventScriptsInitdStart
@itemx @eventScriptsInitdStop
@itemx @eventScriptsInitdStatus
@itemx @eventScriptsInitdReload
from @actorAdmin{} to @procScriptsInitd{}: start/stop the @mediatexO{} daemon.

@item @eventScriptsCgiGetQuery
@itemx @eventScriptsCgiPostQuery{} 
from @procToolsApache{} to @procScriptsCgi{}: @actorUserO{}'s @acronym{HTTP} forwarded query.

@item @eventScriptsCronHourly
@itemx @eventScriptsCronDaily
@itemx @eventScriptsCronMonthly
from @procToolsCron{} to @procScriptsCron{}: scheduled tasks.

@item @eventScriptsInit{} 
@itemx @eventScriptsRemove{} 
@itemx @eventScriptsPurge{} 
from @procClientMisc{} to @procScriptsInitRemovePurge{}: initialise, remove and purge @mediatexO{} software.

@item @eventScriptsAddUser
@itemx @eventScriptsDelUser
from @procClientServ{} to @procScriptsAddDelUser{}: manage @actorPublisherO{} users.

@item @eventScriptsNew
@itemx @eventScriptsFree
from @procClientConf{} to @procScriptsNewFreeClean{}: create/subscribe or destroy/unsubscribe a collection. 

@item @eventScriptsClean
from @procClientMisc{} to @procScriptsNewFreeClean{}: clean the local @acronym{HTML} catalogue.

@item @eventScriptsUpgrade
@itemx @eventScriptsCommit
@itemx @eventScriptsPull
@itemx @eventScriptsPush
from @activityClient{} to @procScriptsPullPush{}: manage @acronym{GIT} synchronisation.

@item @eventScriptsBind
@itemx @eventScriptsUnBind
from @procClientMisc{} to @procScriptsBind{}: manage collection repository binding on the chrooted jail for SSH remote access.

@item @eventScriptsMount
@itemx @eventScriptsUmount
from @procClientSupp{} to  @procScriptsMount{}: manage mounting @iso{} devices.

@item @eventScriptsDeliver
from @procServerDeliver{} to @procScriptsDeliver{}: manage archive availability notification.

@item @eventScriptsAudit
from @procServerDeliver{} to @procScriptsAudit{}: audit an archive.

@end table
@item Processing

Provide a @acronym{BASH} library.

@item Events out
@table @code

@item @eventServerStart
@itemx @eventServerStop
@itemx @eventServerReload
from @procScriptsInitd{} or @procScriptsInitRemovePurge{} to @activityServer{}: 
standard @acronym{UNIX} process management (HUP signal for reload...).

@item @eventToolsApacheRestart
from @procScriptsInitRemovePurge{} to @procToolsApache{}: re-configure @acronym{APACHE}.

@item @eventToolsApacheReload
from @procScriptsNewFreeClean{} to @procToolsApache{}: make @acronym{APACHE} aware of changes into its configuration.

@item @eventServerCgiQuery
from @procScriptsCgi{} to @procServerCgiSrv{}: socket query asking for an archive.

@item @eventToolsGitInit{}
@itemx @eventToolsGitConfig{}
from @procScriptsInitRemovePurge{} or @procScriptsNewFreeClean{} to @procToolsGit{}: initialise a @acronym{GIT} repository.

@item @eventToolsGitClone{}
from @procScriptsNewFreeClean{} to @procToolsGit{}: checkout a @acronym{GIT} collection module.

@item @eventToolsGitConfig{}
@itemx @eventToolsGitCommit{} 
@itemx @eventToolsGitPull{} 
@itemx @eventToolsGitPush{} 
from @procScriptsPullPush{} to @procToolsGit{}: synchronise a @acronym{GIT} module.

@item @eventToolsEximSendMail{} 
from @procScriptsDeliver{} or @procScriptsAudit{} to @procToolsExim{}: send a mail.

@item @eventClientUpload
from @procScriptsCron{} or @procScriptsAudit{} to @procClientUpload{}: upload an incoming archive into the cache.

@item @eventClientExtract
@itemx @eventClientNotify
@itemx @eventClientMiscMake
@itemx @eventClientMotd
from @procScriptsCron{} respectively to @activityClient{}, @procClientMisc{} and @procClientMotd{}: scheduled tasks.

@item @eventActorPublisherMotd
from @procScriptsCron{} to @actorPublisher{}: update the (above generated) message of the day.

@end table
@item Data in or creation
@itemize @bullet
@item @dataConf
@item @dataSupp
@item @dataCatalog
@item @dataServers
@item @dataExtract
@end itemize

@item Data out
@table @file
@item /var/run/mediatex/mdtxd.pid
@item /etc/motd
@itemx ~mdtx/
@itemx ~mdtx-COLL/
@end table

@end itemize

To debug a script, you have to launch it using at least the @var{MDTX} environment variable:
@example
# cd /usr/share/mediatex/scripts
# MDTX_MDTXUSER=mdtx MDTX_LOG_SEVERITY_SCRIPT=debug ./bind.sh 
@end example

Codes:
@table @file
@item  scripts/lib/git.sh
@itemx scripts/lib/htdocs.sh
@itemx scripts/lib/include.sh
@itemx scripts/lib/jails.sh
@itemx scripts/lib/log.sh
@itemx scripts/lib/ssh.sh
@itemx scripts/lib/users.sh
@end table

@node init.d
@subsection init.d
@include initd.texi

@node cgiClient
@subsection cgiClient
@include cgiClient.texi

@node cronHourly-cronDaily
@subsection cronHourly-cronDaily
@include cronHourly-cronDaily.texi

@node init-remove-purge
@subsection init-remove-purge
@include init-remove-purge.texi

@node addUser-delUser
@subsection addUser-delUser
@include addUser-delUser.texi

@node new-free-clean
@subsection new-free-clean
@include new-free-clean.texi

@node upgrade-commit-pull-push
@subsection upgrade-commit-pull-push
@include upgrade-commit-pull-push.texi

@node bind-unbind
@subsection bind-unbind
@include bind-unbind.texi

@node mount-umount
@subsection mount-umount
@include mount-umount.texi

@node deliver
@subsection deliver
@include deliver.texi

@node audit
@subsection audit
@include audit.texi
