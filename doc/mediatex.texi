\input texinfo @c -*-texinfo-*-
@c %**start of header
@setfilename mediatex.info
@include version.texi
@settitle Mediatex @value{VERSION}

@c Define a new index for options.
@defcodeindex op
@c Combine everything into one index (arbitrarily chosen to be the
@c concept index).
@syncodeindex op cp
@paragraphindent 0
@image{mediatex-figures/logo,,,,}
@c %**end of header

@copying
Mediatex archival storage system implements the related @sc{Oais} entity 
and try to match it with the @sc{NF Z 42-013} requirements.
Copyright @copyright{} 2014 Free Software Foundation, Inc.

@quotation
Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3 or
any later version published by the Free Software Foundation; with no
Invariant Sections, with no Front-Cover Texts, and with no Back-Cover
Texts.  A copy of the license is included in the section entitled
``GNU Free Documentation License''.
@end quotation
@end copying
@c If your manual is published on paper by the FSF, it should include
@c the standard FSF Front-Cover and Back-Cover Texts, as given in
@c maintain.texi.

@dircategory Archiving
@direntry
* Mediatex: (mediatex).               Perennial archive manager.
@end direntry

@titlepage
@title Mediatex
@subtitle for version @value{VERSION}, @value{UPDATED}
@author Nicolas Roche (@email{nroche@@narval.tk})
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@chapheading Abstract
@include abstract.texi

@contents

@ifnottex
@node Top
@top Mediatex

This manual is for Mediatex (version @value{VERSION}, @value{UPDATED}).

@insertcopying
@end ifnottex

@include macros.texi

@menu
* Overview::                    General purpose and information.
* Invoking Mediatex::	        Tutorial.
* Communication model::	        Main specifications.
* Relational schema::           Data files descriptions.
* Conceptual model::	        Details specifications.
* Simple use case::             Simple use case
* Reporting bugs::              Sending bug reports and feature suggestions.
* Documentation License::       Copying and sharing this documentation.
* Concept index::	        Index of concepts.
@end menu

@node Overview
@chapter Overview
@include overview.texi

@node Invoking Mediatex
@chapter Invoking @command{mediatex}
@include invoking.texi

@node Communication model
@chapter Communication model
@include main.texi

@node Relational schema
@chapter Data
@include data.texi

@node Conceptual model
@chapter Conceptual model
@include specs.texi

@node Simple use case
@chapter Simple use case
@include useCase.texi

@node Reporting bugs
@chapter Reporting bugs

@cindex bug reporting
@cindex problems
@cindex reporting bugs

To report bugs or suggest enhancements for Mediatex, please
send electronic mail to @email{nroche@@narval.tk}.

For bug reports, please include enough information for the maintainers
to reproduce the problem.  Generally speaking, that means:

@itemize @bullet
@item The version numbers of Mediatex (which you can find by running
      @w{@samp{mediatex --version}}) and any other program(s) or
      manual(s) involved.
@item Hardware and operating system names and versions.
@item The contents of any input files necessary to reproduce the bug.
@item The expected behaviour and/or output.
@item A description of the problem and samples of any erroneous output.
@item Options you gave to @command{configure} other than specifying
      installation directories.
@item Anything else that you think would be helpful.
@end itemize

When in doubt whether something is needed or not, include it.  It's
better to include too much than to leave out something important.

@cindex patches
@cindex contributing
Patches are welcome; if possible, please make them with @samp{@w{diff
-c}}.  Please follow the existing coding style.

@unnumberedsec Tips to debug
@itemize @bullet
@item configure @code{rsyslog} so as not to drop messages
@example
$ cat /etc/rsyslog.conf
$ModLoad imuxsock 
$SystemLogRateLimitInterval 0
$SystemLogRateLimitBurst 0
@end example
@item working on source tree
@example
$ libtool --mode=execute valgrind ./@var{BINARY} @var{ARGS}
$ libtool --mode=execute gdb @var{BINARY}
@end example
@item @code{gdb}
@example
// Attach daemon:
$ gdb
> attach @var{PID}

// Get a core dump:
# echo 1 > /proc/sys/fs/suid_dumpable
# echo '/var/tmp/core.%p' > /proc/sys/kernel/core_pattern
# ulimit -c unlimited               // (into /etc/init.d/mediatexd)

# /etc/init.d/mediatexd start
# kill -SIGABRT @var{PID}           // (to simulate coredump)
# su mdtx
$ gdb mediatexd
> core-file /var/tmp/core
> bt
> frame @var{#Number}
> set args ...
@end example
@item @code{valgrind} to detect memory leaks
@example
# su mdtx
$ valgrind \
       --leak-check=full --show-reachable=yes --track-origins=yes 
       mediatexd
[notice threads.c:390] Daemon (@var{PID}) started
@dots{}
# echo @var{PID} > /var/run/mediatex/mdtxd.pid
# mediatex srv notify 
# kill -SIGTERM @var{PID}
@end example
@item @code{massif} to detect memory hogs
@example
$ pmap @var{PID}

# su mdtx
$ cd /tmp
$ valgrind --tool=massif mediatexd mediatexd -sdebug
[notice threads.c:390] Daemon (@var{PID}) started
@dots{}
# echo @var{PID} > /var/run/mediatex/mdtxd.pid
# mediatex srv notify 
# kill -SIGTERM @var{PID}
$ ms_print massif.out.@var{PID} | less
@end example

@item @code{gprof}
@example
$ make CFLAGS="-p"
$ mediatex make
$ ls gmon.out
$ gprof /usr/bin/mediatex > gprof.txt
@end example
@item 
reload the info page into emacs
@example
in a new buffer use the M-x org-mode :
info:/home/nroche/cvs/mediatex/doc/mediatex.info
info:/usr/share/info/mediatex.info
place cursor on a line and type C-c C-o
@end example
@end itemize

@node Documentation License
@appendix GNU Free Documentation License
@include fdl.texi

@node Concept index
@unnumbered Concept index
@printindex cp

@bye
